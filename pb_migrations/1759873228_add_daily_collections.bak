/// <reference path="../pb_data/types.d.ts" />

migrate((db) => {
  const dao = new Dao(db);

  // ---- sleep_daily ----
  const sleep = new Collection({
    "id": "sleep_daily", // can be any unique string
    "created": new Date().toISOString(),
    "updated": new Date().toISOString(),
    "name": "sleep_daily",
    "type": "base",
    "system": false,
    "schema": [
      { "name": "date", "type": "date", "required": true },
      { "name": "total_min", "type": "number" },
      { "name": "rem_min", "type": "number" },
      { "name": "deep_min", "type": "number" },
      { "name": "core_min", "type": "number" },
      { "name": "inbed_min", "type": "number" },
      {
        "name": "user",
        "type": "relation",
        "options": {
          "collectionId": "_pb_users_auth_",
          "cascadeDelete": true
        }
      }
    ],
    "indexes": [
      "CREATE UNIQUE INDEX sleep_daily_user_date ON sleep_daily (user, date)"
    ],
    "options": {}
  });

  dao.saveCollection(sleep);

  // ---- energy_daily ----
  const energy = new Collection({
    "id": "energy_daily",
    "created": new Date().toISOString(),
    "updated": new Date().toISOString(),
    "name": "energy_daily",
    "type": "base",
    "system": false,
    "schema": [
      { "name": "date", "type": "date", "required": true },
      { "name": "active_energy_burned", "type": "number" },
      { "name": "basal_energy_burned", "type": "number" },
      {
        "name": "user",
        "type": "relation",
        "options": {
          "collectionId": "_pb_users_auth_",
          "cascadeDelete": true
        }
      }
    ],
    "indexes": [
      "CREATE UNIQUE INDEX energy_daily_user_date ON energy_daily (user, date)"
    ],
    "options": {}
  });

  dao.saveCollection(energy);

  // ---- heart_daily ----
  const heart = new Collection({
    "id": "heart_daily",
    "created": new Date().toISOString(),
    "updated": new Date().toISOString(),
    "name": "heart_daily",
    "type": "base",
    "system": false,
    "schema": [
      { "name": "date", "type": "date", "required": true },
      { "name": "resting_hr", "type": "number" },
      { "name": "hrv_sdnn", "type": "number" },
      {
        "name": "user",
        "type": "relation",
        "options": {
          "collectionId": "_pb_users_auth_",
          "cascadeDelete": true
        }
      }
    ],
    "indexes": [
      "CREATE UNIQUE INDEX heart_daily_user_date ON heart_daily (user, date)"
    ],
    "options": {}
  });

  dao.saveCollection(heart);

}, (db) => {
  const dao = new Dao(db);
  for (const name of ["sleep_daily", "energy_daily", "heart_daily", "body_daily"]) {
    const c = dao.findCollectionByNameOrId(name);
    if (c) dao.deleteCollection(c);
  }
});
